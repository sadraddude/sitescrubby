"use client"

import { Checkbox } from "@/components/ui/checkbox"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Textarea } from "@/components/ui/textarea"
import { Switch } from "@/components/ui/switch"
import { Badge } from "@/components/ui/badge"
import type { WebsiteScore } from "@/lib/types"
import {
  Wand2,
  Loader2,
  Download,
  Copy,
  Check,
  Palette,
  Type,
  Layers,
  Code,
  Share2,
  Smartphone,
  Monitor,
  Tablet,
  RefreshCw,
  Maximize2,
  Save,
} from "lucide-react"

interface AIMockupGeneratorProps {
  businessName: string
  businessType?: string
  websiteScore?: WebsiteScore
  websiteUrl?: string
}

export function AIMockupGenerator({
  businessName,
  businessType = "business",
  websiteScore,
  websiteUrl,
}: AIMockupGeneratorProps) {
  const [activeTab, setActiveTab] = useState("design")
  const [isGenerating, setIsGenerating] = useState(false)
  const [mockupGenerated, setMockupGenerated] = useState(false)
  const [selectedStyle, setSelectedStyle] = useState("modern")
  const [selectedColor, setSelectedColor] = useState("blue")
  const [selectedLayout, setSelectedLayout] = useState("hero")
  const [includeTestimonials, setIncludeTestimonials] = useState(true)
  const [includeGallery, setIncludeGallery] = useState(true)
  const [includeContactForm, setIncludeContactForm] = useState(true)
  const [customInstructions, setCustomInstructions] = useState("")
  const [viewMode, setViewMode] = useState("desktop")
  const [copied, setCopied] = useState(false)

  const handleGenerate = () => {
    setIsGenerating(true)

    // Simulate API call delay
    setTimeout(() => {
      setIsGenerating(false)
      setMockupGenerated(true)
    }, 3000)
  }

  const handleCopy = () => {
    setCopied(true)
    setTimeout(() => setCopied(false), 2000)
  }

  // Mockup image URLs (would be generated by AI in production)
  const mockupImages = {
    desktop: "/modern-blue-business.png",
    mobile: "/modern-blue-business.png",
    tablet: "/modern-blue-tablet-website.png",
  }

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle>AI Website Mockup Generator</CardTitle>
          <CardDescription>
            Create professional website mockups tailored to {businessName}'s brand and industry
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
            <TabsList className="grid grid-cols-3 mb-4">
              <TabsTrigger value="design">Design Options</TabsTrigger>
              <TabsTrigger value="preview" disabled={!mockupGenerated}>
                Preview
              </TabsTrigger>
              <TabsTrigger value="export" disabled={!mockupGenerated}>
                Export
              </TabsTrigger>
            </TabsList>

            <TabsContent value="design" className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="business-name">Business Name</Label>
                    <Input id="business-name" value={businessName} readOnly />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="business-type">Business Type</Label>
                    <Input id="business-type" value={businessType} onChange={(e) => setSelectedStyle(e.target.value)} />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="style">Design Style</Label>
                    <Select value={selectedStyle} onValueChange={setSelectedStyle}>
                      <SelectTrigger id="style">
                        <SelectValue placeholder="Select style" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="modern">Modern & Clean</SelectItem>
                        <SelectItem value="minimalist">Minimalist</SelectItem>
                        <SelectItem value="bold">Bold & Vibrant</SelectItem>
                        <SelectItem value="elegant">Elegant & Sophisticated</SelectItem>
                        <SelectItem value="playful">Playful & Creative</SelectItem>
                        <SelectItem value="corporate">Corporate & Professional</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="color">Color Scheme</Label>
                    <Select value={selectedColor} onValueChange={setSelectedColor}>
                      <SelectTrigger id="color">
                        <SelectValue placeholder="Select color scheme" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="blue">Blue Professional</SelectItem>
                        <SelectItem value="green">Green Natural</SelectItem>
                        <SelectItem value="purple">Purple Creative</SelectItem>
                        <SelectItem value="red">Red Energetic</SelectItem>
                        <SelectItem value="orange">Orange Friendly</SelectItem>
                        <SelectItem value="monochrome">Monochrome Elegant</SelectItem>
                        <SelectItem value="custom">Custom Brand Colors</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="layout">Layout Type</Label>
                    <Select value={selectedLayout} onValueChange={setSelectedLayout}>
                      <SelectTrigger id="layout">
                        <SelectValue placeholder="Select layout" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="hero">Hero with Call-to-Action</SelectItem>
                        <SelectItem value="grid">Grid-based Portfolio</SelectItem>
                        <SelectItem value="magazine">Magazine Style</SelectItem>
                        <SelectItem value="landing">Conversion-focused Landing Page</SelectItem>
                        <SelectItem value="ecommerce">E-commerce Layout</SelectItem>
                        <SelectItem value="service">Service Showcase</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label>Content Sections</Label>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between">
                        <Label htmlFor="testimonials" className="cursor-pointer">
                          Include Testimonials
                        </Label>
                        <Switch
                          id="testimonials"
                          checked={includeTestimonials}
                          onCheckedChange={setIncludeTestimonials}
                        />
                      </div>

                      <div className="flex items-center justify-between">
                        <Label htmlFor="gallery" className="cursor-pointer">
                          Include Gallery/Portfolio
                        </Label>
                        <Switch id="gallery" checked={includeGallery} onCheckedChange={setIncludeGallery} />
                      </div>

                      <div className="flex items-center justify-between">
                        <Label htmlFor="contact" className="cursor-pointer">
                          Include Contact Form
                        </Label>
                        <Switch id="contact" checked={includeContactForm} onCheckedChange={setIncludeContactForm} />
                      </div>
                    </div>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="custom-instructions">Custom Instructions (Optional)</Label>
                    <Textarea
                      id="custom-instructions"
                      placeholder="Add any specific requirements or brand guidelines..."
                      value={customInstructions}
                      onChange={(e) => setCustomInstructions(e.target.value)}
                      rows={5}
                    />
                  </div>

                  <div className="pt-4">
                    <Button onClick={handleGenerate} disabled={isGenerating} className="w-full">
                      {isGenerating ? (
                        <>
                          <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                          Generating Mockup...
                        </>
                      ) : mockupGenerated ? (
                        <>
                          <RefreshCw className="mr-2 h-4 w-4" />
                          Regenerate Mockup
                        </>
                      ) : (
                        <>
                          <Wand2 className="mr-2 h-4 w-4" />
                          Generate AI Mockup
                        </>
                      )}
                    </Button>
                  </div>
                </div>
              </div>
            </TabsContent>

            <TabsContent value="preview" className="space-y-4">
              <div className="flex justify-center mb-4">
                <div className="flex items-center bg-gray-100 rounded-lg p-1">
                  <Button
                    variant={viewMode === "desktop" ? "default" : "ghost"}
                    size="sm"
                    onClick={() => setViewMode("desktop")}
                    className="flex items-center"
                  >
                    <Monitor className="h-4 w-4 mr-2" />
                    Desktop
                  </Button>
                  <Button
                    variant={viewMode === "tablet" ? "default" : "ghost"}
                    size="sm"
                    onClick={() => setViewMode("tablet")}
                    className="flex items-center"
                  >
                    <Tablet className="h-4 w-4 mr-2" />
                    Tablet
                  </Button>
                  <Button
                    variant={viewMode === "mobile" ? "default" : "ghost"}
                    size="sm"
                    onClick={() => setViewMode("mobile")}
                    className="flex items-center"
                  >
                    <Smartphone className="h-4 w-4 mr-2" />
                    Mobile
                  </Button>
                </div>
              </div>

              <div className="border rounded-lg overflow-hidden bg-gray-50 flex justify-center p-4">
                <div
                  className={`relative ${viewMode === "mobile" ? "w-[300px]" : viewMode === "tablet" ? "w-[500px]" : "w-full max-w-[800px]"}`}
                >
                  <img
                    src={mockupImages[viewMode] || "/placeholder.svg"}
                    alt={`${businessName} website mockup - ${viewMode} view`}
                    className="w-full h-auto rounded shadow-lg"
                  />
                  <div className="absolute top-2 right-2 flex gap-2">
                    <Button size="icon" variant="outline" className="bg-white h-8 w-8">
                      <Maximize2 className="h-4 w-4" />
                    </Button>
                    <Button size="icon" variant="outline" className="bg-white h-8 w-8">
                      <RefreshCw className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <Card>
                  <CardHeader className="py-3">
                    <CardTitle className="text-sm flex items-center">
                      <Palette className="h-4 w-4 mr-2" />
                      Color Palette
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="py-2">
                    <div className="flex gap-2">
                      <div className="w-8 h-8 rounded-full bg-blue-600"></div>
                      <div className="w-8 h-8 rounded-full bg-blue-400"></div>
                      <div className="w-8 h-8 rounded-full bg-gray-800"></div>
                      <div className="w-8 h-8 rounded-full bg-gray-200"></div>
                      <div className="w-8 h-8 rounded-full bg-white border"></div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader className="py-3">
                    <CardTitle className="text-sm flex items-center">
                      <Type className="h-4 w-4 mr-2" />
                      Typography
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="py-2">
                    <div className="space-y-1">
                      <div className="text-sm font-bold">Heading: Montserrat</div>
                      <div className="text-sm">Body: Open Sans</div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader className="py-3">
                    <CardTitle className="text-sm flex items-center">
                      <Layers className="h-4 w-4 mr-2" />
                      Components
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="py-2">
                    <div className="flex flex-wrap gap-1">
                      <Badge variant="outline">Hero</Badge>
                      <Badge variant="outline">Navigation</Badge>
                      <Badge variant="outline">Cards</Badge>
                      <Badge variant="outline">Forms</Badge>
                      <Badge variant="outline">Footer</Badge>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>

            <TabsContent value="export" className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle>Export Options</CardTitle>
                    <CardDescription>Download or share your mockup</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label className="mb-2 block">Image Format</Label>
                      <div className="flex gap-2">
                        <Button variant="outline" className="flex-1">
                          PNG
                        </Button>
                        <Button variant="outline" className="flex-1">
                          JPG
                        </Button>
                        <Button variant="outline" className="flex-1">
                          PDF
                        </Button>
                      </div>
                    </div>

                    <div>
                      <Label className="mb-2 block">Resolution</Label>
                      <Select defaultValue="high">
                        <SelectTrigger>
                          <SelectValue placeholder="Select resolution" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="standard">Standard (1x)</SelectItem>
                          <SelectItem value="high">High (2x)</SelectItem>
                          <SelectItem value="ultra">Ultra HD (4x)</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div className="space-y-2">
                      <Label>Include Views</Label>
                      <div className="flex items-center space-x-2">
                        <Checkbox id="desktop-view" defaultChecked />
                        <Label htmlFor="desktop-view">Desktop</Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Checkbox id="tablet-view" defaultChecked />
                        <Label htmlFor="tablet-view">Tablet</Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Checkbox id="mobile-view" defaultChecked />
                        <Label htmlFor="mobile-view">Mobile</Label>
                      </div>
                    </div>

                    <div className="pt-2">
                      <Button className="w-full">
                        <Download className="mr-2 h-4 w-4" />
                        Download All Files
                      </Button>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>Development Options</CardTitle>
                    <CardDescription>Convert mockup to code or share with developers</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="p-4 border rounded-md bg-gray-50">
                      <h3 className="text-sm font-medium mb-2 flex items-center">
                        <Code className="h-4 w-4 mr-2" />
                        Generate Code
                      </h3>
                      <p className="text-sm text-gray-600 mb-3">
                        Convert this mockup directly to production-ready code
                      </p>
                      <div className="space-y-2">
                        <div className="flex items-center justify-between">
                          <Label htmlFor="react-next" className="cursor-pointer text-sm">
                            React + Next.js
                          </Label>
                          <Switch id="react-next" defaultChecked />
                        </div>
                        <div className="flex items-center justify-between">
                          <Label htmlFor="tailwind" className="cursor-pointer text-sm">
                            Tailwind CSS
                          </Label>
                          <Switch id="tailwind" defaultChecked />
                        </div>
                        <div className="flex items-center justify-between">
                          <Label htmlFor="responsive" className="cursor-pointer text-sm">
                            Fully Responsive
                          </Label>
                          <Switch id="responsive" defaultChecked />
                        </div>
                      </div>
                      <Button className="w-full mt-3">
                        <Wand2 className="mr-2 h-4 w-4" />
                        Generate Code
                      </Button>
                    </div>

                    <div>
                      <Label className="mb-2 block">Share with Team</Label>
                      <div className="flex gap-2">
                        <Input placeholder="Email address" className="flex-1" />
                        <Button variant="outline">
                          <Share2 className="h-4 w-4" />
                        </Button>
                      </div>
                    </div>

                    <div>
                      <Label className="mb-2 block">Copy Link</Label>
                      <div className="flex gap-2">
                        <Input value="https://websiteanalyzer.ai/mockups/12345" readOnly className="flex-1" />
                        <Button variant="outline" onClick={handleCopy}>
                          {copied ? <Check className="h-4 w-4" /> : <Copy className="h-4 w-4" />}
                        </Button>
                      </div>
                    </div>

                    <div className="pt-2">
                      <Button variant="outline" className="w-full">
                        <Save className="mr-2 h-4 w-4" />
                        Save to Projects
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>
          </Tabs>
        </CardContent>
      </Card>
    </div>
  )
}
